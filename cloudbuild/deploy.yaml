steps:
- id: docker-build
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/wedding-http:$REVISION_ID'
  - '-f'
  - './nginx/Dockerfile'
  - '.'
  waitFor:
  - '-'
- id: docker-push
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/wedding-http:$REVISION_ID'
  waitFor:
  - docker-build
- id: kube-deployment
  name: 'gcr.io/cloud-builders/gke-deploy:stable'
  args:
  - 'run'
  - '--filename=kube/http.deployment.yaml'
  - '--image=gcr.io/$PROJECT_ID/wedding-http:$REVISION_ID'
  - '--location=us-central1-a'
  - '--cluster=deepthought'
  waitFor:
  - docker-push
- id: kube-ingress
  name: 'gcr.io/cloud-builders/gke-deploy:stable'
  args:
  - 'apply'
  - '--filename=kube/http.ingress.yaml'
  - '--location=us-central1-a'
  - '--cluster=deepthought'
  waitFor:
  - docker-push
- id: kube-service
  name: 'gcr.io/cloud-builders/gke-deploy:stable'
  args:
  - 'apply'
  - '--filename=kube/http.service.yaml'
  - '--location=us-central1-a'
  - '--cluster=deepthought'
  waitFor:
  - docker-push
images:
- 'gcr.io/$PROJECT_ID/wedding-http:$REVISION_ID'
